{"version":3,"sources":["./src/app/users/user-details/user-details.component.ts","./src/app/users/user-details/user-details.component.html","./src/app/customer-opinion/vote-thanks/vote-thanks.component.ts","./src/app/customer-opinion/vote-thanks/vote-thanks.component.html","./src/app/pipes/number-to-smiley-logo.pipe.ts","./src/environments/environment.ts","./src/app/_helpers/error-interceptor.model.ts","./src/app/customer-opinion-details/customer-opinion-detail-form/customer-opinion-detail-form.component.ts","./src/app/customer-opinion-details/customer-opinion-detail-form/customer-opinion-detail-form.component.html","./src/app/shared/services/customer-opinion-read-list-between-two-date.service.ts","./src/app/four-oh-four/four-oh-four.component.ts","./src/app/four-oh-four/four-oh-four.component.html","./src/app/shared/services/customer-opinion-average-between-two-date.service.ts","./src/app/shared/models/user.model.ts","./src/app/shared/models/customer-opinion.model.ts","./src/app/customer-opinion-list/customer-opinion-list.component.ts","./src/app/customer-opinion-list/customer-opinion-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/authentication.service.ts","./src/app/customer-opinion-list/customer-opinion-list-between-two-date/customer-opinion-list-between-two-date-form/customer-opinion-list-between-two-date-form.component.ts","./src/app/customer-opinion-list/customer-opinion-list-between-two-date/customer-opinion-list-between-two-date-form/customer-opinion-list-between-two-date-form.component.html","./src/app/shared/models/user-login.model.ts","./src/app/app.module.ts","./src/app/customer-opinion-stats/customer-opinion-stats.component.ts","./src/app/customer-opinion-stats/customer-opinion-stats.component.html","./src/app/customer-opinion-stats/customer-opinion-stats-average-between-two-date/customer-opinion-stats-average-between-two-date-form/customer-opinion-stats-average-between-two-date-form.component.ts","./src/app/customer-opinion-stats/customer-opinion-stats-average-between-two-date/customer-opinion-stats-average-between-two-date-form/customer-opinion-stats-average-between-two-date-form.component.html","./src/app/four-oh-one/four-oh-one.component.ts","./src/app/four-oh-one/four-oh-one.component.html","./src/app/shared/services/user.service.ts","./src/app/shared/services/customer-opinion.service.ts","./src/app/customer-opinion-stats/customer-opinion-stats-average-between-two-date/customer-opinion-stats-average-between-two-date.component.ts","./src/app/customer-opinion-stats/customer-opinion-stats-average-between-two-date/customer-opinion-stats-average-between-two-date.component.html","./src/app/customer-opinion/vote-smiley/vote-smiley.component.ts","./src/app/customer-opinion/vote-smiley/vote-smiley.component.html","./src/app/users/user-details/user-detail-form/user-detail-form.component.ts","./src/app/users/user-details/user-detail-form/user-detail-form.component.html","./src/app/_helpers/jwt-interceptor.model.ts","./src/app/customer-opinion-list/customer-opinion-list-between-two-date/customer-opinion-list-between-two-date.component.ts","./src/app/customer-opinion-list/customer-opinion-list-between-two-date/customer-opinion-list-between-two-date.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/customer-opinion-details/customer-opinion-details.component.ts","./src/app/customer-opinion-details/customer-opinion-details.component.html","./src/app/shared/models/customer-opinion-read-list-between-two-date.model.ts","./src/app/_helpers/auth-guard.model.ts","./src/app/shared/models/customer-opinion-average-between-two-date.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.scss']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n\r\n  constructor(public service: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.refreshList();\r\n  }\r\n\r\n  populateForm(selectedRecord) {\r\n    this.service.formData = Object.assign({}, selectedRecord);\r\n  }\r\n\r\n  onDelete(Id) {\r\n    if (confirm('Are you sure you want to delete this record ?')) {\r\n      this.service.deleteUser(Id)\r\n        .subscribe(res => {\r\n          this.service.refreshList();\r\n        },\r\n        err => { console.log(err); });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"jumbtron\">\r\n    <h1 class=\"display-4 text-center\">List of Users</h1>\r\n    <h3 class=\"display-4 text-center\">Select a User to edit it</h3>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <app-user-detail-form></app-user-detail-form>\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <div>\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Password</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tr *ngFor=\"let pd of service.list\">\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Id}}</td>\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Username}}</td>\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Email}}</td>\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Role}}</td>\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Password}}</td>\r\n                        <td>\r\n                            <i class=\"far fa-trash-alt fa-lg text-danger\" (click)=\"onDelete(pd.Id)\"></i>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-vote-thanks',\r\n  templateUrl: './vote-thanks.component.html',\r\n  styleUrls: ['./vote-thanks.component.scss']\r\n})\r\nexport class VoteThanksComponent implements OnInit {\r\n\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  this.autoRedirectAfter3secondsWithoutAction();\r\n  }\r\n\r\n  goToVoteMenu() {\r\n    this.router.navigate(['vote']);\r\n  }\r\n\r\n  autoRedirectAfter3secondsWithoutAction(){\r\n    setTimeout(() => {\r\n        this.goToVoteMenu();\r\n    }, 3000);\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"content\" role=\"main\">\r\n\r\n    <h1>Votre avis a bien été enregistré.</h1>\r\n    <h3>Nous vous remercions beaucoup d'avoir exprimé votre avis</h3>    \r\n    \r\n\r\n    \r\n    <img src=\"../../assets/images/smiley-angel.jpg\" class=\"img-responsive inline-block\" alt=\"angel smiley\" /> \r\n \r\n    \r\n    \r\n\r\n    <h2 class=\"mt-5\">Nous espérons vous revoir prochainement</h2>\r\n    <div>\r\n        <button class=\"btn btn-info btn-sm btn-inline mr-5\" (click)=\"goToVoteMenu()\">Menu principal</button>\r\n    \r\n    </div>\r\n    \r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'numberToSmileyLogo'\r\n})\r\nexport class NumberToSmileyLogoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    switch(value) {\r\n        case 1: {\r\n            return \"../../assets/images/smiley-red.png\";\r\n            break;\r\n        }\r\n        case 2: {\r\n            return \"../../assets/images/smiley-orange.png\";\r\n            break;\r\n        }\r\n        case 3: {\r\n            return \"../../assets/images/smiley-yellow.png\";\r\n            break;\r\n        }\r\n        case 4: {\r\n            return \"../../assets/images/smiley-lightGreen.png\";\r\n            break;\r\n        }\r\n        case 5: {\r\n            return \"../../assets/images/smiley-green.png\";\r\n            break;\r\n        }\r\n        default: {\r\n            return value.toString();\r\n            break;\r\n        }\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:44356/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService, private router: Router) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                console.log('error 401');\r\n                this.router.navigate(['unauthorized']);\r\n                // auto logout if 401 response returned from api\r\n                // this.authenticationService.logout();\r\n                //location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CustomerOpinionService } from '../../shared/services/customer-opinion.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-detail-form',\r\n  templateUrl: './customer-opinion-detail-form.component.html',\r\n  styleUrls: ['./customer-opinion-detail-form.component.scss']\r\n})\r\nexport class CustomerOpinionDetailFormComponent implements OnInit {\r\n\r\n  constructor(public service: CustomerOpinionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm (form?: NgForm) {\r\n    if (form != null){\r\n      form.form.reset();\r\n    }\r\n    else {\r\n    this.service.formData = {\r\n      Id: 0,\r\n      SmileyId: 0,\r\n      Commentary: '',\r\n      Created_at: null\r\n      };\r\n    }\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.service.formData.SmileyId = +this.service.formData.SmileyId;\r\n    if (this.service.formData.Id === 0)\r\n    {\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  updateRecord(form: NgForm) {\r\n    this.service.putCustomerOpinion().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        console.log('Submitted successfully', 'CustomerOpinion Register');\r\n        this.service.refreshList();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  insertRecord(form: NgForm) {\r\n    //this.service.formData.Id = null;    \r\n    //this.service.formData.SmileyId = +this.service.formData.SmileyId;\r\n    this.service.postCustomerOpinion().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.service.refreshList();\r\n      },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n}\r\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n    <input type=\"hidden\" name=\"Id\" [value]=\"service.formData.Id\">\r\n    <div class=\"form-group\">\r\n        <label>SmileyId</label>\r\n        <input name=\"SmileyId\" #SmileyId=\"ngModel\" [(ngModel)]=\"service.formData.SmileyId\"\r\n            class=\"form-control form-control-lg\" placeholder=\"SmileyId\" required\r\n            [class.invalid]=\"SmileyId.invalid &#038;&#038; SmileyId.touched\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Comment</label>\r\n        <input name=\"Comment\" #Comment=\"ngModel\" [(ngModel)]=\"service.formData.Commentary\"\r\n            class=\"form-control form-control-lg\" placeholder=\"Comment\"  maxlength=\"500\"\r\n            [class.invalid]=\"Comment.invalid &#038;&#038; Comment.touched\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Created_at</label>\r\n        <input *ngIf=\"service.formData.Id === 0\" type=\"date\" name=\"Created_at\" #Created_at=\"ngModel\" [(ngModel)]=\"service.formData.Created_at\"\r\n            class=\"form-control form-control-lg\" placeholder=\"Created_at\" required \r\n            [class.invalid]=\"Created_at.invalid &#038;&#038; Created_at.touched\">\r\n        <input *ngIf=\"service.formData.Id != 0\" name=\"Created_at\" #Created_at=\"ngModel\" [(ngModel)]=\"service.formData.Created_at\"\r\n            class=\"form-control form-control-lg\" placeholder=\"Created_at\" required \r\n            [class.invalid]=\"Created_at.invalid &#038;&#038; Created_at.touched\">\r\n    </div>        \r\n\r\n    <div class=\"form-group\">\r\n        <button *ngIf=\"service.formData.Id === 0\" class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Insert</button>\r\n        <button *ngIf=\"service.formData.Id != 0\" class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Update n°{{service.formData.Id}}</button>\r\n    </div>\r\n\r\n</form>","import { Injectable } from '@angular/core';\r\nimport {HttpClient } from '@angular/common/http';\r\nimport { CustomerOpinionReadListBetweenTwoDate } from '../models/customer-opinion-read-list-between-two-date.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerOpinionReadListBetweenTwoDateService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  readonly rootURL = \"https://localhost:44356/api\"\r\n  formData: CustomerOpinionReadListBetweenTwoDate = new CustomerOpinionReadListBetweenTwoDate();\r\n  list: CustomerOpinionReadListBetweenTwoDate[];\r\n\r\n  getCustomerOpinionReadListBetweenTwoDate(dateStart,dateEnd){\r\n    this.http.get(`${this.rootURL}/CustomerOpinion/listBetweenTwoDate/${dateStart},${dateEnd}`)\r\n    .toPromise()\r\n    .then(r => this.list = r as CustomerOpinionReadListBetweenTwoDate[])\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-four-oh-four',\r\n  templateUrl: './four-oh-four.component.html',\r\n  styleUrls: ['./four-oh-four.component.scss']\r\n})\r\nexport class FourOhFourComponent implements OnInit {\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  goToVoteMenu() {\r\n    this.router.navigate(['vote']);\r\n  }\r\n\r\n}\r\n","<div class=\"content mt-0\" role=\"main\">\r\n    <h1>Erreur 404</h1>\r\n    <h2>La page que vous cherchez n'existe pas !</h2>\r\n    <div>\r\n        <button class=\"btn btn-info btn-sm btn-inline mr-5\" (click)=\"goToVoteMenu()\">Menu principal</button>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CustomerOpinionAverageBetweenTwoDate } from '../models/customer-opinion-average-between-two-date.model';\r\nimport {HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerOpinionAverageBetweenTwoDateService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\nformData: CustomerOpinionAverageBetweenTwoDate = new CustomerOpinionAverageBetweenTwoDate();\r\nreadonly rootURL = \"https://localhost:44356/api\";\r\nlist: CustomerOpinionAverageBetweenTwoDate[];\r\n\r\ngetCustomerOpinionAverageBetweenTwoDate(dateStart,dateEnd){\r\n  this.http.get(`${this.rootURL}/CustomerOpinion/${dateStart},${dateEnd}`)\r\n  .toPromise()\r\n  .then(res => this.list = res as CustomerOpinionAverageBetweenTwoDate[]);\r\n}\r\n\r\n}","export class User {\r\n    Id: number;\r\n    Username: string;\r\n    Email: string;\r\n    Role: number;\r\n    Password: string;\r\n}\r\n","export class CustomerOpinion {\r\n    Id: number;\r\n    SmileyId: number;\r\n    Commentary: string;\r\n    Created_at: Date;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-list',\r\n  templateUrl: './customer-opinion-list.component.html',\r\n  styleUrls: ['./customer-opinion-list.component.scss']\r\n})\r\nexport class CustomerOpinionListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content mt-0\" role=\"main\">\r\n    <app-customer-opinion-list-between-two-date></app-customer-opinion-list-between-two-date>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './shared/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'SmileIT-ang';\r\n  \r\n  constructor(private authService:AuthenticationService) {        \r\n  }\r\n\r\n  isLoggedIn(){\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isLoggedOut(){\r\n    return this.authService.isLoggedOut();\r\n  }\r\n\r\n  logout(){\r\n    this.authService.logout();\r\n  }\r\n}\r\n","<!-- Toolbar -->\r\n<!-- <div class=\"toolbar\" role=\"banner\">\r\n  <img\r\n    width=\"40\"\r\n    alt=\"SmileIT Logo\"\r\n    src='../assets/images/SmileIT-Logo-green.svg'\r\n    />\r\n  <span>Welcome to SmileIT</span>\r\n    <div class=\"spacer\"></div>    \r\n</div>\r\n\r\n<nav class=\"navbar navbar-default\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-collapse\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li routerLinkActive=\"active\"><a routerLink=\"auth\">Log In</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"vote\">Vote</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav> -->\r\n\r\n\r\n<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <a [routerLink]=\"''\">\r\n      <img width=\"40\" alt=\"SmileIT Logo\" src='../assets/images/SmileIT-Logo-green.svg' class=\"mr-3\" />\r\n    </a>   \r\n    <h1 >SmileIT</h1>\r\n    <span class=\"menu-spacer\"></span>\r\n    <div>\r\n      <a mat-button routerLinkActive=\"active\" [routerLink]=\"'/vote'\"> Vote </a>\r\n      <a *ngIf=\"isLoggedIn() === false\" mat-button routerLinkActive=\"active\" [routerLink]=\"'/login'\"> Login </a>\r\n      <a *ngIf=\"isLoggedIn() === true\" mat-button routerLinkActive=\"active\" [routerLink]=\"'/vote'\" (click)=\"logout()\"> Log out </a>\r\n      <a *ngIf=\"isLoggedIn() === true\" mat-button routerLinkActive=\"active\" [routerLink]=\"'/customerOpinion'\"> CustomerOpinions </a>\r\n      <a *ngIf=\"isLoggedIn() === true\" mat-button routerLinkActive=\"active\" [routerLink]=\"'/customerOpinionStats'\"> Statistiques </a>\r\n      <a *ngIf=\"isLoggedIn() === true\" mat-button routerLinkActive=\"active\" [routerLink]=\"'/customerOpinionList'\">CustomerOpinion Listing</a>\r\n      <a *ngIf=\"isLoggedIn() === true\" mat-button routerLinkActive=\"active\" [routerLink]=\"'/user'\"> Users </a>  \r\n\r\n\r\n    </div>\r\n  </mat-toolbar-row>\r\n   \r\n</mat-toolbar>\r\n\r\n\r\n<div class=\"content\" role=\"main\">\r\n  \r\n  <!-- Components with rooting -->\r\n  <router-outlet></router-outlet>\r\n  \r\n\r\n  <!-- Footer -->\r\n  <footer class=\"page-footer mt-5\">\r\n    <h4 class=\"text-right\">Business name</h4>    \r\n  </footer>\r\n\r\n  <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\r\n    <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\r\n  </svg>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- Personnal Toolbar\r\n<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <button mat-icon-button>\r\n      <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\r\n    </button>\r\n    <h1>SmileIT</h1>\r\n    <span class=\"menu-spacer\"></span>\r\n    <div>\r\n      <a mat-button [routerLink]=\"'/accounts'\"> Main Menu </a>\r\n      <a mat-button [routerLink]=\"'/create-account'\"> Login </a>\r\n      <a mat-button [routerLink]=\"'/contacts'\"> Logout </a>\r\n      <a mat-button [routerLink]=\"'/create-contact'\"> Create Contact </a>\r\n      <a mat-button [routerLink]=\"'/activities'\"> Activities </a>\r\n      <a mat-button [routerLink]=\"'/create-activity'\"> Create Activity </a>\r\n\r\n    </div>\r\n  </mat-toolbar-row>\r\n\r\n</mat-toolbar> -->","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/user.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserLogin } from '../models/user-login.model';\r\nimport { StringifyOptions } from 'querystring';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    loginFormData: UserLogin = new UserLogin();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    \r\n\r\n    login() {\r\n        return this.http.post<any>(`${environment.apiUrl}/Auth/Login`, this.loginFormData)\r\n            .pipe(map(response => {\r\n                const token = (response as any).Token\r\n                localStorage.setItem('jwtToken', token);\r\n            }));\r\n    }\r\n\r\n    \r\n    getCurrentTokenValue(){\r\n        return localStorage.getItem('jwtToken');\r\n    }\r\n    \r\n    isLoggedIn(){\r\n        if(localStorage.getItem('jwtToken') != null){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isLoggedOut(){\r\n        return !this.isLoggedIn();\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('jwtToken');\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerOpinionReadListBetweenTwoDateService } from '../../../shared/services/customer-opinion-read-list-between-two-date.service'\r\nimport { NgForm } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-list-between-two-date-form',\r\n  templateUrl: './customer-opinion-list-between-two-date-form.component.html',\r\n  styleUrls: ['./customer-opinion-list-between-two-date-form.component.scss']\r\n})\r\nexport class CustomerOpinionListBetweenTwoDateFormComponent implements OnInit {\r\n\r\n  constructor(public serviceList: CustomerOpinionReadListBetweenTwoDateService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(formList: NgForm){\r\n    console.log(formatDate(formList.value['dateStart'],'dd-MM-yyyy','en-US'));\r\n    console.log(formatDate(formList.value['dateEnd'],'dd-MM-yyyy','en-US'));\r\n    this.serviceList.getCustomerOpinionReadListBetweenTwoDate(\r\n      formatDate(formList.value['dateStart'],'dd-MM-yyyy','en-US'),\r\n      formatDate(formList.value['dateEnd'],'dd-MM-yyyy','en-US'));\r\n    \r\n  }\r\n}\r\n","<h2>List between two dates </h2>\r\n<form (ngSubmit)=\"onSubmit(formList)\" #formList=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"name\">date début</label>\r\n        <input type=\"date\" class=\"form-control\" name=\"dateStart\" ngModel >\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"name\">date fin</label>\r\n        <input type=\"date\" class=\"form-control\" name=\"dateEnd\" ngModel >\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Get List of Opinion</button>\r\n</form>","export class UserLogin {\r\n    Username: string;\r\n    Password: string;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './_helpers/jwt-interceptor.model';\r\nimport {ErrorInterceptor } from './_helpers/error-interceptor.model';\r\n\r\n// import { MatToolbarModule,\r\n//    MatIconModule, \r\n//    MatSidenavModule, \r\n//    MatListModule, \r\n//    MatButtonModule } from  '@angular/material';\r\n\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n\r\nimport { FourOhFourComponent } from './four-oh-four/four-oh-four.component';\r\nimport { CustomerOpinionDetailsComponent } from './customer-opinion-details/customer-opinion-details.component';\r\nimport { CustomerOpinionDetailFormComponent } from './customer-opinion-details/customer-opinion-detail-form/customer-opinion-detail-form.component';\r\nimport { VoteSmileyComponent } from './customer-opinion/vote-smiley/vote-smiley.component';\r\nimport { VoteThanksComponent } from './customer-opinion/vote-thanks/vote-thanks.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomerOpinionListComponent } from './customer-opinion-list/customer-opinion-list.component';\r\n\r\nimport { UserDetailsComponent } from './users/user-details/user-details.component';\r\nimport { UserDetailFormComponent } from './users/user-details/user-detail-form/user-detail-form.component';\r\nimport { FourOhOneComponent } from './four-oh-one/four-oh-one.component';\r\nimport { NumberToSmileyLogoPipe } from './pipes/number-to-smiley-logo.pipe';\r\nimport { CustomerOpinionStatsComponent } from './customer-opinion-stats/customer-opinion-stats.component';\r\nimport { CustomerOpinionStatsAverageBetweenTwoDateComponent } from './customer-opinion-stats/customer-opinion-stats-average-between-two-date/customer-opinion-stats-average-between-two-date.component';\r\nimport { CustomerOpinionStatsAverageBetweenTwoDateFormComponent } from './customer-opinion-stats/customer-opinion-stats-average-between-two-date/customer-opinion-stats-average-between-two-date-form/customer-opinion-stats-average-between-two-date-form.component';\r\nimport { CustomerOpinionListBetweenTwoDateComponent } from './customer-opinion-list/customer-opinion-list-between-two-date/customer-opinion-list-between-two-date.component';\r\nimport { CustomerOpinionListBetweenTwoDateFormComponent } from './customer-opinion-list/customer-opinion-list-between-two-date/customer-opinion-list-between-two-date-form/customer-opinion-list-between-two-date-form.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FourOhFourComponent,\r\n    CustomerOpinionDetailsComponent,\r\n    CustomerOpinionDetailFormComponent,\r\n    VoteSmileyComponent,\r\n    VoteThanksComponent,\r\n    LoginComponent,\r\n    CustomerOpinionListComponent,\r\n    UserDetailsComponent,\r\n    UserDetailFormComponent,\r\n    FourOhOneComponent,\r\n    NumberToSmileyLogoPipe,\r\n    CustomerOpinionStatsComponent,\r\n    CustomerOpinionStatsAverageBetweenTwoDateComponent,\r\n    CustomerOpinionStatsAverageBetweenTwoDateFormComponent,\r\n    CustomerOpinionListBetweenTwoDateComponent,\r\n    CustomerOpinionListBetweenTwoDateFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatInputModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-stats',\r\n  templateUrl: './customer-opinion-stats.component.html',\r\n  styleUrls: ['./customer-opinion-stats.component.scss']\r\n})\r\nexport class CustomerOpinionStatsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content mt-0\" role=\"main\">\r\n    <app-customer-opinion-stats-average-between-two-date></app-customer-opinion-stats-average-between-two-date>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerOpinionAverageBetweenTwoDateService } from '../../../shared/services/customer-opinion-average-between-two-date.service'\r\nimport { NgForm } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-stats-average-between-two-date-form',\r\n  templateUrl: './customer-opinion-stats-average-between-two-date-form.component.html',\r\n  styleUrls: ['./customer-opinion-stats-average-between-two-date-form.component.scss']\r\n})\r\nexport class CustomerOpinionStatsAverageBetweenTwoDateFormComponent implements OnInit {\r\n\r\n  constructor(public serviceAvg : CustomerOpinionAverageBetweenTwoDateService) { }\r\n\r\n  haveDate : boolean;\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n    //this.checkDates();\r\n  }\r\n  resetForm (formAvg?: NgForm) {\r\n    if (formAvg != null){\r\n      formAvg.form.reset();\r\n    }\r\n    else {\r\n    this.serviceAvg.formData = {\r\n      SmileyId: 0,\r\n      NumberOfVote: 0,\r\n      Percent: 0\r\n      };\r\n    }\r\n  }\r\n  // checkDates(formAvg?: NgForm){\r\n  //   if(formAvg.value['dateStart'] == null && formAvg.value['dateEnd'] == null){\r\n  //     console.log(formAvg.value['dateStart'])\r\n  //     this.haveDate = false;\r\n  //   }\r\n  //   else{\r\n  //     this.haveDate = true;\r\n  //   }   \r\n  // }\r\n\r\n  onSubmit(formAvg: NgForm){\r\n    console.log(formatDate(formAvg.value['dateStart'],'dd-MM-yyyy','en-US'));\r\n    console.log(formatDate(formAvg.value['dateEnd'],'dd-MM-yyyy','en-US'));\r\n    this.serviceAvg.getCustomerOpinionAverageBetweenTwoDate(\r\n      formatDate(formAvg.value['dateStart'],'dd-MM-yyyy','en-US'),\r\n      formatDate(formAvg.value['dateEnd'],'dd-MM-yyyy','en-US'));\r\n    \r\n  }\r\n}\r\n","<h2>Average votes between two dates </h2>\r\n<form (ngSubmit)=\"onSubmit(formAvg)\" #formAvg=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"name\">date début</label>\r\n        <input type=\"date\" class=\"form-control\" name=\"dateStart\" ngModel >\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"name\">date fin</label>\r\n        <input type=\"date\" class=\"form-control\" name=\"dateEnd\" ngModel >\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Get Averages</button>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-four-oh-one',\r\n  templateUrl: './four-oh-one.component.html',\r\n  styleUrls: ['./four-oh-one.component.scss']\r\n})\r\nexport class FourOhOneComponent implements OnInit {\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  goToVoteMenu() {\r\n    this.router.navigate(['vote']);\r\n  }\r\n  goToLogin() {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<div class=\"content mt-0\" role=\"main\">\r\n\r\n    <h1>Erreur 401</h1>\r\n    <h2>Vous n'avez pas accès à cette page !</h2>\r\n    <div>\r\n        <button class=\"btn btn-info btn-sm btn-inline mr-5\" (click)=\"goToVoteMenu()\">Menu principal</button>\r\n        <button class=\"btn btn-info btn-sm btn-inline mr-5\" (click)=\"goToLogin()\">Me login</button>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\r\n  formData: User = new User();\r\n  list: User[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postUser(){\r\n    return this.http.post(`${environment.apiUrl}/User`, this.formData);\r\n  }\r\n\r\n  putUser(){\r\n    return this.http.put(`${environment.apiUrl}/User/${this.formData.Id}`, this.formData);\r\n  }\r\n\r\n  deleteUser(id){\r\n    return this.http.delete(`${environment.apiUrl}/User/${id}`);\r\n  }\r\n\r\n  getOneUser(id){\r\n    return this.http.get(`${environment.apiUrl}/User/${id}`);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n}\r\n\r\n  refreshList(){\r\n    this.http.get(`${environment.apiUrl}/User/`)\r\n    .toPromise()\r\n    .then(res => this.list = res as User[]);\r\n  }\r\n\r\n}\r\n","import {CustomerOpinion} from '../models/customer-opinion.model';\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerOpinionService {\r\n\r\n  formData: CustomerOpinion = new CustomerOpinion();\r\n  list: CustomerOpinion[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postCustomerOpinion(){\r\n    return this.http.post(`${environment.apiUrl}/CustomerOpinion`, this.formData);\r\n  }\r\n\r\n  putCustomerOpinion(){\r\n    return this.http.put(`${environment.apiUrl}/CustomerOpinion/${this.formData.Id}`, this.formData);\r\n  }\r\n\r\n  deleteCustomerOpinion(id){\r\n    return this.http.delete(`${environment.apiUrl}/CustomerOpinion/${id}`);\r\n  }\r\n\r\n  getOneCustomerOpinion(id){\r\n    return this.http.get(`${environment.apiUrl}/CustomerOpinion/${id}`);\r\n  }\r\n\r\n  refreshList(){\r\n    this.http.get(`${environment.apiUrl}/CustomerOpinion/`)\r\n    .toPromise()\r\n    .then(res => this.list = res as CustomerOpinion[]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerOpinionAverageBetweenTwoDateService } from 'src/app/shared/services/customer-opinion-average-between-two-date.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-stats-average-between-two-date',\r\n  templateUrl: './customer-opinion-stats-average-between-two-date.component.html',\r\n  styleUrls: ['./customer-opinion-stats-average-between-two-date.component.scss']\r\n})\r\nexport class CustomerOpinionStatsAverageBetweenTwoDateComponent implements OnInit {\r\n\r\n  constructor(public serviceAvg : CustomerOpinionAverageBetweenTwoDateService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbtron\">\r\n    <h1 class=\"display-4 text-center\">CustomerOpinion Average Selection</h1>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <app-customer-opinion-stats-average-between-two-date-form></app-customer-opinion-stats-average-between-two-date-form>\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <div>\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>\r\n            \r\n                            <th>Smiley Type</th>\r\n                            <th>Number of vote </th>\r\n                            <th>Percent </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tr *ngFor=\"let item of serviceAvg.list\">\r\n                        <td><img class=\"circle-link mt-0 mb-0\" src=\"{{ item.SmileyId | numberToSmileyLogo}}\"></td>\r\n                        <td>{{item.NumberOfVote}}</td>\r\n                        <td>{{item.Percent}} %</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>     \r\n    \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\r\nimport { CustomerOpinionService } from '../../shared/services/customer-opinion.service';\r\n\r\n@Component({\r\n  selector: 'app-vote-smiley',\r\n  templateUrl: './vote-smiley.component.html',\r\n  styleUrls: ['./vote-smiley.component.scss']\r\n})\r\nexport class VoteSmileyComponent implements OnInit {\r\n\r\n  wantToAddComment: boolean = false;\r\n\r\n  constructor(public service: CustomerOpinionService, private router: Router, private authService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n  }\r\n  \r\n  resetForm (form?: NgForm) {\r\n    if (form != null){\r\n      form.form.reset();\r\n    }\r\n    else {\r\n    this.service.formData = {\r\n      Id: 0,\r\n      SmileyId: 0,\r\n      Commentary: '',\r\n      Created_at: null\r\n      };\r\n      this.wantToAddComment = false;\r\n    }\r\n  }\r\n\r\n  ToggleWantToAddComment(){\r\n    this.wantToAddComment = !this.wantToAddComment;\r\n  }\r\n\r\n  \r\n  logout(){\r\n    this.authService.logout();\r\n  }\r\n\r\n  isLoggedIn(){\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  onVote1(form: NgForm){\r\n    this.service.formData.SmileyId = 1;\r\n    this.onSubmit(form);\r\n    this.goToThanks();\r\n  }\r\n  onVote3(form: NgForm){\r\n    this.service.formData.SmileyId = 3;\r\n    this.onSubmit(form);\r\n    this.goToThanks();\r\n  }\r\n  onVote5(form: NgForm){\r\n    this.service.formData.SmileyId = 5;\r\n    this.onSubmit(form);\r\n    this.goToThanks();\r\n  }\r\n\r\n  goToThanks(){\r\n    this.router.navigate(['thanks']);\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.service.formData.Created_at = new Date();\r\n    this.insertRecord(form);\r\n  }\r\n\r\n  insertRecord(form: NgForm) {\r\n    this.service.postCustomerOpinion().subscribe(\r\n      res => {\r\n        console.log(\"successfully voted\");\r\n      },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"content mt-0 mb-0\" role=\"main\">\r\n\r\n   \r\n\r\n  <div *ngIf=\"isLoggedIn() === true\">\r\n    <span class=\"text-\"> Attention vous êtes logged in !</span>\r\n    <button class=\"btn btn-danger btn-sm btn-inline ml-2\" (click)=\"logout()\">Logout</button>\r\n  </div>\r\n\r\n  <h1 class=\"mt-0\">How was your experience ?</h1>\r\n  <h2>We'd love it if you'd let us know!</h2>\r\n  <button class=\"btn btn-info btn-sm btn-block btn-width-spec\" (click)=\"ToggleWantToAddComment()\"> Click me to add a comment ;) </button>\r\n  \r\n    <form #form=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"onSubmit(form)\">\r\n        <input type=\"hidden\" name=\"Id\" [value]=\"service.formData.Id\">\r\n        <input type=\"hidden\" name=\"SmileyId\" [ngModel]=\"service.formData.SmileyId\">\r\n        <input type=\"hidden\" name=\"Commentary\" [ngModel]=\"service.formData.Commentary\">\r\n        <div *ngIf=\"wantToAddComment === true\" class=\"form-group \">\r\n          <label for=\"comment\">   \r\n          </label>    \r\n          <textarea name=\"comment\" #comment=\"ngModel\" [(ngModel)]=\"service.formData.Commentary\" class=\"form-control form-control-lg \"  placeholder=\"Ce qui pourrait être amélioré :\"></textarea>\r\n        </div>\r\n        <input type=\"hidden\" name=\"Created_at\" [ngModel]=\"service.formData.Created_at\">        \r\n    </form> \r\n\r\n    <div class=\"row mt-4\">\r\n      <div id=\"small-img\" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 center\">\r\n        <ul>\r\n          <li>\r\n            <a  (click)=\"onVote1(form)\">\r\n              <img src=\"../../assets/images/smiley-red.png\" class=\"circle-link\" alt=\"red unhappy smiley\" />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a (click)=\"onVote3(form)\">\r\n              <img src=\"../../assets/images/smiley-yellow.png\" class=\"circle-link\" alt=\"yellow neutral smiley\" />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a (click)=\"onVote5(form)\">\r\n              <img src=\"../../assets/images/smiley-green.png\" class=\"circle-link\" alt=\"green happy smiley\" />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UserService } from '../../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail-form',\r\n  templateUrl: './user-detail-form.component.html',\r\n  styleUrls: ['./user-detail-form.component.scss']\r\n})\r\nexport class UserDetailFormComponent implements OnInit {\r\n\r\n  constructor(public service: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm (form?: NgForm) {\r\n    if (form != null){\r\n      form.form.reset();\r\n    }\r\n    else {\r\n    this.service.formData = {\r\n      Id: 0,\r\n      Username: '',\r\n      Email: '',\r\n      Role: 0,\r\n      Password: ''\r\n      };\r\n    }\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.service.formData.Role = +this.service.formData.Role;\r\n    if (this.service.formData.Id === 0)\r\n    {\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  updateRecord(form: NgForm) {\r\n    this.service.putUser().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        console.log('Submitted successfully', 'User Register');\r\n        this.service.refreshList();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  insertRecord(form: NgForm) {\r\n    this.service.postUser().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.service.refreshList();\r\n      },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n}\r\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n    <input type=\"hidden\" name=\"Id\" [value]=\"service.formData.Id\">\r\n    <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input name=\"Username\" #Username=\"ngModel\" [(ngModel)]=\"service.formData.Username\"\r\n            class=\"form-control form-control-lg\" placeholder=\"Username\" required\r\n            [class.invalid]=\"Username.invalid &#038;&#038; Username.touched\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"email\" name=\"Email\" #Email=\"ngModel\" [(ngModel)]=\"service.formData.Email\"\r\n            class=\"form-control form-control-lg\" placeholder=\"Email\" required\r\n            [class.invalid]=\"Email.invalid &#038;&#038; Email.touched\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label class=\"label mb-2\">Role</label>\r\n        <div class=\"form-check mb-2\">\r\n            <input id=\"SuperAdmin\" type=\"radio\" value=\"1\" name=\"Role\" #Role=\"ngModel\" \r\n            [(ngModel)]=\"service.formData.Role\" class=\"form-check-input\">\r\n            <label class=\"form-check-label\" for=\"SuperAdmin\">SuperAdmin</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input id=\"Employee\" type=\"radio\" value=\"3\" name=\"Role\" #Role=\"ngModel\" \r\n            [(ngModel)]=\"service.formData.Role\" class=\"form-check-input\">\r\n            <label class=\"form-check-label\" for=\"Employee\">Employee</label>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"Password\" #Password=\"ngModel\" [(ngModel)]=\"service.formData.Password\"\r\n            class=\"form-control form-control-lg\" placeholder=\"Password\" required \r\n            [class.invalid]=\"Password.invalid &#038;&#038; Password.touched\">\r\n    </div>\r\n        \r\n\r\n    <div class=\"form-group\">\r\n        <button *ngIf=\"service.formData.Id === 0\" class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Insert</button>\r\n        <button *ngIf=\"service.formData.Id != 0\" class=\"btn btn-info btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Update n°{{service.formData.Id}}</button>\r\n    </div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\nimport { stringify } from 'querystring';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n    \r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let authRequest = request;\r\n        const token = this.authenticationService.getCurrentTokenValue();\r\n        if (token != null) {\r\n            authRequest = request.clone({   \r\n                //headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)             \r\n                setHeaders: {\r\n                    Authorization: `Bearer ${token}`\r\n                }                   \r\n            });        \r\n            return next.handle(authRequest);\r\n        }\r\n        else{\r\n            return next.handle(request);\r\n        }\r\n    }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\r\n  ];","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerOpinionReadListBetweenTwoDateService } from 'src/app/shared/services/customer-opinion-read-list-between-two-date.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-list-between-two-date',\r\n  templateUrl: './customer-opinion-list-between-two-date.component.html',\r\n  styleUrls: ['./customer-opinion-list-between-two-date.component.scss']\r\n})\r\nexport class CustomerOpinionListBetweenTwoDateComponent implements OnInit {\r\n\r\n  constructor(public serviceList : CustomerOpinionReadListBetweenTwoDateService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbtron\">\r\n    <h1 class=\"display-4 text-center\">CustomerOpinion Average Selection</h1>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <app-customer-opinion-list-between-two-date-form></app-customer-opinion-list-between-two-date-form>\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <div>\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>            \r\n                            <th>Date</th>\r\n                            <th>Smiley</th>\r\n                            <th>Comment from customer </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tr *ngFor=\"let item of serviceList.list\">\r\n                        <td>{{item.CustomerReviewDateTime | date :'d/M/yyyy, h:mm a'}}</td>\r\n                        <td><img class=\"circle-link mt-0 mb-0\" src=\"{{item.idSmiley | numberToSmileyLogo }}\" ></td>\r\n                        <td>{{item.CustomerComment}}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>     \r\n    \r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomerOpinionDetailsComponent } from './customer-opinion-details/customer-opinion-details.component';\r\nimport { VoteSmileyComponent } from './customer-opinion/vote-smiley/vote-smiley.component';\r\nimport { VoteThanksComponent } from './customer-opinion/vote-thanks/vote-thanks.component';\r\nimport { FourOhFourComponent } from './four-oh-four/four-oh-four.component';\r\nimport { FourOhOneComponent } from './four-oh-one/four-oh-one.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {CustomerOpinionListComponent} from './customer-opinion-list/customer-opinion-list.component';\r\nimport { UserDetailsComponent } from './users/user-details/user-details.component';\r\nimport { AuthGuard } from './_helpers/auth-guard.model';\r\nimport { CustomerOpinionStatsComponent } from './customer-opinion-stats/customer-opinion-stats.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'vote', component: VoteSmileyComponent},\r\n  {path: 'thanks', component: VoteThanksComponent},\r\n  { path: 'customerOpinionList', component: CustomerOpinionListComponent, canActivate: [AuthGuard]},\r\n  { path: 'customerOpinionStats', component: CustomerOpinionStatsComponent, canActivate: [AuthGuard]},\r\n  { path: 'customerOpinion', component: CustomerOpinionDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'user', component: UserDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: '', component: VoteSmileyComponent},\r\n  { path: 'unauthorized', component: FourOhOneComponent },\r\n  { path: 'not-found', component: FourOhFourComponent },\r\n  { path: '**', redirectTo: 'not-found'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public service: AuthenticationService, private router: Router) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm (form?: NgForm) {\r\n    if (form != null){\r\n      form.form.reset();\r\n    }\r\n\r\n    else {\r\n    this.service.loginFormData = {\r\n      Username: '',\r\n      Password: ''\r\n      };\r\n    }\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n      this.service.login().subscribe(\r\n        res => {\r\n          this.resetForm(form);\r\n          console.log(\"logged in successfully!\");\r\n          this.router.navigate(['vote']);\r\n        },\r\n        err => { console.log(err); }\r\n      );\r\n  }\r\n}\r\n","<form class=\"col s12 white\" #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\r\n    \r\n      <div class=\"form-group\">\r\n        <label class=\"text-center\" data-error=\"Required field!\">Username :</label>\r\n        <input class=\"form-control form-control-lg\" type=\"text\" name=\"UserName\" #UserName=\"ngModel\" [(ngModel)]=\"service.loginFormData.Username\" required>\r\n        \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label [attr.data-error]=\"Password.errors!=null?(Password.errors.required?'Required field!':'Minimum 3 characters needed'):''\">Password :</label>\r\n        <input class=\"form-control form-control-lg\" type=\"password\" name=\"Password\" #Password=\"ngModel\" [(ngModel)]=\"service.loginFormData.Password\" required>\r\n      </div>    \r\n    \r\n      <div class=\"form-group\">\r\n        <button [disabled]=\"form.invalid\" class=\"btn btn-info btn-lg btn-block\" type=\"submit\">Log in</button>\r\n\r\n      </div>   \r\n</form> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerOpinionService } from '../shared/services/customer-opinion.service';\r\n//import { NumberToSmileyLogoPipe } from '../pipes/number-to-smiley-logo.pipe';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer-opinion-details',\r\n  templateUrl: './customer-opinion-details.component.html',\r\n  styleUrls: ['./customer-opinion-details.component.scss']\r\n})\r\nexport class CustomerOpinionDetailsComponent implements OnInit {\r\n\r\n  constructor(public service: CustomerOpinionService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.service.refreshList();\r\n  }  \r\n\r\n  populateForm(selectedRecord) {\r\n    this.service.formData = Object.assign({}, selectedRecord);\r\n  }\r\n\r\n  onDelete(Id) {\r\n    if (confirm('Are you sure you want to delete this record ?')) {\r\n      this.service.deleteCustomerOpinion(Id)\r\n        .subscribe(res => {\r\n          this.service.refreshList();\r\n        },\r\n        err => { console.log(err); });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"jumbtron\">\r\n    <h1 class=\"display-4 text-center\">List of Customer's Opinions</h1>\r\n    <h3 class=\"display-4 text-center\">Select an opinion to edit it</h3>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <app-customer-opinion-detail-form></app-customer-opinion-detail-form>\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <div>\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Smiley</th>\r\n                            <th>Comment</th>\r\n                            <th>Date of creation</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tr *ngFor=\"let pd of service.list\">\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Id}}</td>\r\n                        <td (click)=\"populateForm(pd)\"><img class=\"circle-link mt-0 mb-0\" src=\"{{pd.SmileyId | numberToSmileyLogo }}\" ></td>\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Commentary}}</td>\r\n                        <td (click)=\"populateForm(pd)\">{{pd.Created_at | date :'d/M/yyyy, h:mm a'}}</td>\r\n                        <td>\r\n                            <i class=\"far fa-trash-alt fa-lg text-danger\" (click)=\"onDelete(pd.Id)\"></i>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>     \r\n    </div>\r\n</div>","export class CustomerOpinionReadListBetweenTwoDate {\r\n    CustomerReviewDateTime : Date;\r\n    idSmiley : number;\r\n    CustomerComment:string;\r\n    Username:string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const token = localStorage.getItem('jwtToken');\r\n        if (token) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['unauthorized']);\r\n        return false;\r\n    }\r\n}","export class CustomerOpinionAverageBetweenTwoDate {\r\n    SmileyId : number;\r\n    NumberOfVote : number;\r\n    Percent : number;\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}